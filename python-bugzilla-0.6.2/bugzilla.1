.TH bugzilla 1  "June 07, 2011" "version 0.6.2" "User Commands"
.SH NAME
bugzilla \- command-line interface to Bugzilla over XML-RPC
.SH SYNOPSIS
.B bugzilla
[\fIoptions\fR] [\fIcommand\fR] [\fIcommand-options\fR]
.SH DESCRIPTION
.PP
.BR bugzilla
is a command-line utility that allows access to the XML-RPC interface provided
by Bugzilla.
.PP
\fIcommand\fP is one of:
.br
.I \fR * login - log into the given bugzilla instance
.br
.I \fR * new - create a new bug
.br
.I \fR * query - search for bugs matching given criteria
.br
.I \fR * modify - modify existing bugs
.br
.I \fR * attach - attach files to existing bugs, or get attachments
.br
.I \fR * info - get info about the given bugzilla instance
.SH GLOBAL OPTIONS
.IP "--help, -h"
show this help message and exit
.IP "--bugzilla=BUGZILLA"
bugzilla XMLRPC URI. default: https://bugzilla.redhat.com/xmlrpc.cgi
.IP "--bztype=BZTYPE"
Bugzilla type. Autodetected if not set. Available types: Bugzilla3 Bugzilla32 Bugzilla34 Bugzilla36 RHBugzilla3 NovellBugzilla
.IP "--user=USER"
username
.IP "--password=PASSWORD"
password
.IP "--cookiefile=COOKIEFILE"
cookie file to use for bugzilla authentication
.IP "--verbose"
give more info about what's going on
.IP "--debug"
output bunches of debugging info
.SH \[oq]NEW\[cq] OPTIONS
.IP "--product=PRODUCT, -p PRODUCT"
REQUIRED: product name (list with 'bugzilla info -p')
.IP "--version=VERSION, -v VERSION"
REQUIRED: product version
.IP "--component=COMPONENT, -c COMPONENT"
REQUIRED: component name (list with 'bugzilla info -c PRODUCT')
.IP "--comment=COMMENT, -l COMMENT"
REQUIRED: initial bug comment
.IP "--short_desc=SHORT_DESC, --summary=SHORT_DESC, -s SHORT_DESC"
REQUIRED: bug summary
.IP "--os=OP_SYS, -o OP_SYS"
OPTIONAL: operating system (default: Linux)
.IP "--arch=REP_PLATFORM, -a REP_PLATFORM"
OPTIONAL: arch this bug occurs on (default: All)
.IP "--severity=BUG_SEVERITY"
OPTIONAL: bug severity (default: medium)
.IP "--priority=PRIORITY"
OPTIONAL: bug priority (default: medium)
.IP "--url=BUG_FILE_LOC, -u BUG_FILE_LOC"
OPTIONAL: URL for further bug info
.IP "--cc=CC"
OPTIONAL: add emails to initial CC list
.IP "--full, -f"
output detailed bug info
.IP "--ids, -i"
output only bug IDs
.IP "--extra, -e"
output additional bug information (keywords, Whiteboards, etc.)
.IP "--oneline"
one line summary of the bug (useful for scripts)
.IP "--raw"
raw output of the bugzilla contents
.IP "--outputformat=OUTPUTFORMAT"
Print output in the form given. You can use RPM-style tags that match bug fields, e.g.: '%{bug_id}: %{short_desc}'
.SH \[oq]QUERY\[cq] OPTIONS
.IP "--bug_id=BUG_ID, -b BUG_ID"
specify individual bugs by IDs, separated with commas
.IP "--product=PRODUCT, -p PRODUCT"
product name, comma-separated (list with 'bugzilla info -p')
.IP "--version=VERSION, -v VERSION"
product version
.IP "--component=COMPONENT, -c COMPONENT"
component name(s), comma-separated (list with 'bugzilla info -c PRODUCT')
.IP "--components_file=COMPONENTS_FILE"
list of component names from a file, one component per line (list with 'bugzilla info -c PRODUCT')
.IP "--long_desc=LONG_DESC, -l LONG_DESC"
search inside bug comments
.IP "--target_milestone=TARGET_MILESTONE, -m TARGET_MILESTONE"
search for a target milestone
.IP "--short_desc=SHORT_DESC, -s SHORT_DESC"
search bug summaries
.IP "--bug_status=BUG_STATUS, -t BUG_STATUS"
comma-separated list of bug statuses to accept [Default:all] [Available:NEW,ASSIGNED,NEEDINFO,ON_DEV,MODIFIED,POST,ON_QA,FAILS_QA,PASSES_QA,REOPENED,VERIFIED,RELEASE_PENDING,CLOSED]
.IP "--severity=SEVERITY, -x SEVERITY"
search severities, comma-separated
.IP "--priority=PRIORITY, -z PRIORITY"
search priorities, comma-separated
.IP "--emailtype=EMAILTYPE, -E EMAILTYPE"
Email: specify searching option for emails, ie. substring,notsubstring,exact,... [Default: substring]
.IP "--cc=CC, -o CC"
Email: search cc lists for given address
.IP "--reporter=REPORTER, -r REPORTER"
Email: search reporter email for given address
.IP "--assigned_to=ASSIGNED_TO, -a ASSIGNED_TO"
Email: search for bugs assigned to this address
.IP "--qa_contact=QA_CONTACT, -q QA_CONTACT"
Email: search for bugs which have QA Contact assigned to this address
.IP "--url=URL, -u URL"
search keywords field for given url
.IP "--url_type=URL_TYPE, -U URL_TYPE"
specify searching option for urls, ie. anywords,allwords,nowords
.IP "--keywords=KEYWORDS, -k KEYWORDS"
search keywords field for specified words
.IP "--keywords_type=KEYWORDS_TYPE, -K KEYWORDS_TYPE"
specify searching option for keywords, ie. anywords,allwords,nowords
.IP "--status_whiteboard=STATUS_WHITEBOARD, -w STATUS_WHITEBOARD"
search Status Whiteboard field for specified words
.IP "--status_whiteboard_type=STATUS_WHITEBOARD_TYPE, -W STATUS_WHITEBOARD_TYPE"
specify searching option for Status Whiteboard, ie. anywords,allwords,nowords
.IP "--booleantype=BOOLEANTYPE, -B BOOLEANTYPE"
specify searching option for booleans, ie. substring,notsubstring,exact,... [Default: substring]
.IP "--boolean_query=BOOLEAN_QUERY"
Boolean:Create your own query. Format: BooleanName-Condition-Parameter &/| ... . ie, keywords-substring-Partner & keywords-notsubstring-OtherQA
.IP "--blocked=BLOCKED"
Boolean:search for bugs that block this bug ID
.IP "--dependson=DEPENDSON"
Boolean:search for bugs that depend on this bug ID
.IP "--flag=FLAG"
Boolean:search for bugs that have certain flag states present
.IP "--qa_whiteboard=QA_WHITEBOARD"
Boolean:search for bugs that have certain QA Whiteboard text present
.IP "--devel_whiteboard=DEVEL_WHITEBOARD"
Boolean:search for bugs that have certain Devel Whiteboard text present
.IP "--alias=ALIAS"
Boolean:search for bugs that have the provided alias
.IP "--fixed_in=FIXED_IN"
search Status Whiteboard field for specified words
.IP "--from-url=FROM_URL"
Use the query given by a query.cgi URL. (Use quotes!)
.IP "--full, -f"
output detailed bug info
.IP "--ids, -i"
output only bug IDs
.IP "--extra, -e"
output additional bug information (keywords, Whiteboards, etc.)
.IP "--oneline"
one line summary of the bug (useful for scripts)
.IP "--raw"
raw output of the bugzilla contents
.IP "--outputformat=OUTPUTFORMAT"
Print output in the form given. You can use RPM-style tags that match bug fields, e.g.: '%{bug_id}: %{short_desc}'
.SH \[oq]MODIFY\[cq] OPTIONS
.IP "--comment=COMMENT, -l COMMENT"
Add a comment
.IP "--close=RESOLUTION, -k RESOLUTION"
Close with the given resolution
.IP "--private, -p"
Mark as private
.IP "--status=STATUS, -s STATUS"
Change status of bug
.IP "--assignee=ASSIGNEE"
Assign bugzilla to assignee
.IP "--qa_contact=QA_CONTACT"
Change QA contact
.IP "--flag=FLAG, -f FLAG"
Update bugzilla flags with requested type, ie fedora-cvs? (Use a new option for each flag)
.IP "--cc=CC"
Add an email to the cc list
.IP "--fixed_in=VERSION, -F VERSION"
"Fixed in version" field
.SH \[oq]ATTACH\[cq] OPTIONS
.IP "--file=FILENAME, -f FILENAME"
File to attach, or filename for data provided on stdin
.IP "--description=DESCRIPTION, -d DESCRIPTION"
A short description of the file being attached
.IP "--type=MIMETYPE, -t MIMETYPE"
Mime-type for the file being attached
.IP "--get=ATTACHID, -g ATTACHID"
Download the attachment with the given ID
.IP "--getall=BUGID, --get-all=BUGID"
Download all attachments on the given bug
.SH \[oq]INFO\[cq] OPTIONS
.IP "--products, -p"
Get a list of products
.IP "--components=PRODUCT, -c PRODUCT"
List the components in the given product
.IP "--component_owners=PRODUCT, -o PRODUCT"
List components (and their owners)
.IP "--versions=PRODUCT, -v PRODUCT"
List the versions for the given product
.SH EXAMPLES
.PP
.RS 0
bugzilla query --bug_id 62037

bugzilla query --version 15 --component python-bugzilla

bugzilla login

bugzilla create -p Fedora -v rawhide -c python-bugzilla \\
         --summary "python-bugzilla causes headaches" \\
         --comment "python-bugzilla made my brain hurt when I used it."

bugzilla attach --file ~/Pictures/cam1.jpg --desc "me, in pain" $BUGID

bugzilla attach --getall $BUGID

bugzilla modify --close NOTABUG --comment "Actually, you're hungover." $BUGID

.SH EXIT STATUS
.BR bugzilla
normally returns 0 if the requested command was successful.
Otherwise, exit status is 1 if
.BR bugzilla
is interrupted by the user (or a login attempt fails), 2 if a
socket error occurs (e.g. TCP connection timeout), and 3 if the server returns
an XML-RPC fault.
.SH NOTES
Not everything that's exposed in the Web UI is exposed by XML-RPC, and not
everything that's exposed by XML-RPC is used by
.BR bugzilla .
.SH BUGS
Bugs? In a sub-1.0 release? Preposterous.
.SH AUTHOR
Will Woods <wwoods@redhat.com>
